
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_Create_Restore_DbBackup]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SP_Create_Restore_DbBackup]
GO
CREATE PROCEDURE [dbo].[SP_Create_Restore_DbBackup]

	 @Str_DbName as nvarchar(100) = ' ',
	 @Str_Path nvarchar(500) = ' ',
	 @int_state as int = 0

AS

	 declare @str_Date as nvarchar(10)
	 declare @str_Time as nvarchar(10)

	 set @str_Date = dbo.GetNowDate()
	 set @str_Time = dbo.GetNowTime()
	
 if @int_state = 1
 BEGIN
	Set @Str_Path = @Str_Path + @Str_DbName + Replace(@str_Date,'/','') + Replace(@str_Time,':','') + '.bak'
      BACKUP DATABASE @Str_DbName 
	  TO DISK = @Str_Path 
	  WITH FORMAT, 
		COMPRESSION; 
 END



  if @int_state = 2
  BEGIN
	RESTORE DATABASE @Str_DbName FROM DISK = @Str_Path
  END


GO


IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Tbl_VersionFiles]') AND type in (N'U'))
BEGIN
	CREATE TABLE [dbo].[Tbl_VersionFiles](
		[Prk_CentralVersionFiles_AutoID] [int] IDENTITY(1,1) NOT NULL,
		[Str_Type] [nvarchar](10) NULL,
		[Str_FileName] [nvarchar](50) NULL,
		[Str_FileSize] [nvarchar](20) NULL,
		[Str_CRC] [nvarchar](5) NULL,
		[Str_VersionNo] [nvarchar](10) NULL,
		[Int_PartNo] [int] NULL,
		[Bin_FileContent] [varbinary](max) NULL,
		[Str_Date] [nvarchar](10) NULL,
		[Str_Time] [nvarchar](10) NULL,
		[Str_Description] [nvarchar](max) NULL,
	 CONSTRAINT [PK_Tbl_CentralVersionFiles] PRIMARY KEY CLUSTERED 
	(
		[Prk_CentralVersionFiles_AutoID] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
End
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Tbl_VersionReleaseVDescription]') AND type in (N'U'))
BEGIN
	CREATE TABLE [dbo].[Tbl_VersionReleaseVDescription](
		[prk_VersionReleaseVDescription_AutoID] [int] IDENTITY(1,1) NOT NULL,
		[frk_ParsicUserID] [int] NOT NULL,
		[Str_VersionNumber] [nvarchar](10) NOT NULL,
		[str_Title] [nvarchar](200) NOT NULL,
		[str_Description] [nvarchar](max) NOT NULL,
		[int_Order] [int] NULL,
		[str_Date] [nvarchar](10) NOT NULL,
		[str_Time] [nvarchar](10) NOT NULL,
		[bit_Visibility] [bit] NULL,
		[bit_LerningTips] [bit] NULL,
		[int_Code] [int] NULL,
	 CONSTRAINT [PK_Tbl_VersionReleaseVDescription] PRIMARY KEY CLUSTERED 
	(
		[prk_VersionReleaseVDescription_AutoID] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
End
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Tbl_VersionReleaseVLogs]') AND type in (N'U'))
BEGIN
	CREATE TABLE [dbo].[Tbl_VersionReleaseVLogs](
		[Prk_VersionReleaseLogs_AutoID] [int] IDENTITY(1,1) NOT NULL,
		[Frk_VersionReleaseID] [int] NULL,
		[Frk_ParsicUserID] [int] NOT NULL,
		[Str_VersionFrom] [nvarchar](5) NOT NULL,
		[Str_VersionTo] [nvarchar](5) NOT NULL,
		[Str_ErrorLog] [nvarchar](max) NULL,
		[Str_Description] [nvarchar](max) NULL,
		[Int_AppType] [nvarchar](50) NULL,
		[Int_LogType] [int] NULL,
		[Str_ComputerName] [nvarchar](100) NULL,
		[Str_DataBaseName] [nvarchar](100) NULL,
		[Bit_IsExe] [bit] NULL,
		[Str_ExeSize] [nvarchar](50) NULL,
		[Bit_IsActiveDB] [bit] NULL,
		[Str_Date] [nvarchar](10) NULL,
		[Str_Time] [nvarchar](10) NULL,
	 CONSTRAINT [PK_Tbl_VersionReleaseVLogs] PRIMARY KEY CLUSTERED 
	(
		[Prk_VersionReleaseLogs_AutoID] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
	End
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Tbl_VersionReleaseVSplitsSubLogs]') AND type in (N'U'))
BEGIN
	CREATE TABLE [dbo].[Tbl_VersionReleaseVSplitsSubLogs](
		[Prk_VersionReleaseVSubLogs_AutoID] [int] IDENTITY(1,1) NOT NULL,
		[Frk_ParsicUserID] [int] NOT NULL,
		[Str_ComputerName] [nvarchar](100) NULL,
		[Str_DbName] [nvarchar](100) NULL,
		[Bit_Exe] [bit] NULL,
		[Str_Version] [nvarchar](20) NULL,
		[Int_Order] [int] NULL,
		[Int_WholeCount] [int] NULL,
		[Str_ErrorLog] [nvarchar](max) NULL,
		[Str_Description] [nvarchar](max) NULL,
		[Str_Date] [nvarchar](10) NULL,
		[Str_Time] [nvarchar](10) NULL,
	 CONSTRAINT [PK_Tbl_VersionReleaseVSplitsSubLogs] PRIMARY KEY CLUSTERED 
	(
		[Prk_VersionReleaseVSubLogs_AutoID] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
	End
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_Insert_VersionReleaseVLogs]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SP_Insert_VersionReleaseVLogs]
GO
CREATE PROCEDURE [dbo].[SP_Insert_VersionReleaseVLogs]
	 @Int_State as int = 0,
	 @Frk_VersionReleaseID as int = 0,
	 @Frk_ParsicUserID as int = 0,
	 @Str_Version as nvarchar(20) = '',
	 @Str_VersionFrom as nvarchar(5) = '',
	 @Str_VersionTo as nvarchar(5) =  '',
	 @Str_ErrorLog as nvarchar(MAX) = '',
	 @Str_Description as nvarchar(MAX) = '',
	 @Int_AppType as int = 0, 
	 @Int_LogType as int = 0, 
	 @Str_ComputerName as nvarchar(100) =  '',
	 @Str_DataBaseName as nvarchar(100) =  '',
	 @Bit_IsActiveDB as bit = 0,
	 @Bit_IsEXE as bit = 0, 
	 @Str_ExeSize as nvarchar(50) = '',
	 @Int_WholeCount as int = 0,
	 @Int_Order as int = 0
	 
AS

BEGIN
	 declare @str_Date as nvarchar(10)
	 declare @str_Time as nvarchar(10)

	 set @str_Date = dbo.GetNowDate()
	 set @str_Time = dbo.GetNowTime()
	

	if @Int_State = 0
	begin

		INSERT INTO Tbl_VersionReleaseVLogs
	
			(Frk_VersionReleaseID, Frk_ParsicUserID, Str_VersionFrom, Str_VersionTo, Str_ErrorLog, Str_Description, Int_AppType, Int_LogType, Str_ComputerName, Str_DataBaseName, Bit_IsExe, Str_ExeSize, Bit_IsActiveDB , Str_Date, Str_Time)

		 VALUES 
	 
			(@Frk_VersionReleaseID, @Frk_ParsicUserID, @Str_VersionFrom, @Str_VersionTo, @Str_ErrorLog, @Str_Description, @Int_AppType, @Int_LogType, @Str_ComputerName, @Str_DataBaseName, @Bit_IsEXE, @Str_ExeSize, @Bit_IsActiveDB, @str_Date,@str_Time)
	end


	if @Int_State = 1
	begin

		INSERT INTO Tbl_VersionReleaseVSplitsSubLogs
	
			(Frk_ParsicUserID, Str_ComputerName, Str_DbName, Bit_Exe, Str_Version, Int_Order, Int_WholeCount, Str_ErrorLog, Str_Description, Str_Date, Str_Time)

		 VALUES 
	 
			(@Frk_ParsicUserID, @Str_ComputerName, @Str_DataBaseName, @Bit_IsEXE, @Str_Version, @Int_Order, @Int_WholeCount, @Str_ErrorLog, @Str_Description, @str_Date,@str_Time)
	end
END

GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_Insert_VersionDescriptions]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SP_Insert_VersionDescriptions]
GO

Create PROCEDURE [dbo].[SP_Insert_VersionDescriptions]
	 @frk_ParsicUserID as int = 0,
	 @Str_VersionNumber nvarchar(10) = '',
	 @str_Title nvarchar(200) = '',
	 @str_Description as nvarchar(MAX) =  '',
	 @int_Order int = 0,
	 @bit_Visibility as bit = 0,
	 @bit_LerningTips as bit = 0,
	 @int_Code as int = 0
AS

BEGIN
	 declare @str_Date as nvarchar(10)
	 declare @str_Time as nvarchar(10)

	 set @str_Date = dbo.GetNowDate()
	 set @str_Time = dbo.GetNowTime()
	


	INSERT INTO Tbl_VersionReleaseVDescription
	
		(frk_ParsicUserID,Str_VersionNumber,str_Title,str_Description,int_Order,str_Date,str_Time,bit_Visibility,bit_LerningTips,int_Code)

	 VALUES 
	 
		(@frk_ParsicUserID,@Str_VersionNumber,@str_Title,@str_Description,@int_Order,@Str_Date,@Str_Time,@bit_Visibility,@bit_LerningTips,@int_Code)
	
END


GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_Insert_VersionFiles]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SP_Insert_VersionFiles]
GO

CREATE PROCEDURE [dbo].[SP_Insert_VersionFiles]
	 @Str_Type as nvarchar(10) = " ",
	 @Str_FileName nvarchar(50) = " ",
	 @Str_FileSize nvarchar(20) = " ",
	 @Str_CRC as nvarchar(5) = " ",
	 @Str_VersionNo nvarchar(10) = " ",
	 @Int_PartNo as int = 0,
	 @Bin_FileContent as varbinary(MAX),
	 @str_StartData as nvarchar(10) = " ",
	 @str_FinishData as nvarchar(10) = " ",
	 @str_description as nvarchar(max) = " "

AS

BEGIN
	 declare @str_Date as nvarchar(10)
	 declare @str_Time as nvarchar(10)

	 set @str_Date = dbo.GetNowDate()
	 set @str_Time = dbo.GetNowTime()
	


	INSERT INTO Tbl_VersionFiles 
	
		(Str_Type,Str_FileName,Str_FileSize,Str_CRC,Str_VersionNo,Int_PartNo,Bin_FileContent,Str_Date,Str_Time,Str_Description)

	 VALUES 
	 
		(@Str_Type,@Str_FileName,@Str_FileSize,@Str_CRC,@Str_VersionNo,@Int_PartNo,@Bin_FileContent,@Str_Date,@Str_Time,@Str_Description)
	

END


GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_Get_VersionFiles]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SP_Get_VersionFiles]
GO
CREATE PROCEDURE [dbo].[SP_Get_VersionFiles]

	 @Str_Type as nvarchar(10) = " ",
	 @Str_FileName nvarchar(50) = " ",
	 @Str_VersionNo nvarchar(10) = " ",
	 @int_state as int = 0

AS

 if @int_state = 1
 BEGIN

      SELECT * FROM Tbl_VersionFiles WHERE Str_Type = @Str_Type
 
 END
 else if @int_state = 2
 BEGIN
 
      SELECT Str_VersionNo FROM Tbl_VersionFiles WHERE Str_Type = @Str_Type
 
 END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_Delete_VersionFiles]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SP_Delete_VersionFiles]
GO
Create PROCEDURE [dbo].[SP_Delete_VersionFiles]

	 @Str_Type as nvarchar(10) = " ",
	 @Str_VersionNo nvarchar(10) = " ",
	 @Str_Name as nvarchar(Max) = " ",
	 @int_state as int = 0

AS
if @int_state = 1
	BEGIN
 
      DELETE FROM Tbl_VersionFiles WHERE Str_Type = @Str_Type
	End
if @int_state = 2
	BEGIN
 
      DELETE FROM Tbl_VersionFiles WHERE Str_Type = @Str_Type and Str_FileName = @Str_Name
 
	END
if @int_state = 3
	BEGIN
 
      DELETE FROM Tbl_VersionFiles WHERE Str_Type = @Str_Type and Str_FileName <> @Str_Name
 
	END

GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_Get_VersionReleaseLogs]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SP_Get_VersionReleaseLogs]
GO
Create PROCEDURE [dbo].[SP_Get_VersionReleaseLogs]

	 @Int_Count as int = 20,
	 @Bit_FromTop as bit = True,
	 @int_state as int = 0

AS

declare @MyDate as nvarchar(10)

set @MyDate = dbo.GetNowDate()


 if @int_state = 1
 BEGIN
	 if @Bit_FromTop = 1
		 BEGIN
			select *  from Tbl_VersionReleaseVLogs
		 end
	 else
		 begin 
	 		select *  from Tbl_VersionReleaseVLogs order by Prk_VersionReleaseLogs_AutoID desc
		 end
 END

  if @int_state = 2
 BEGIN
	 if @Bit_FromTop = 1
		BEGIN
			select *  from Tbl_VersionReleaseVSplitsSubLogs
		end
	 else
		begin
	 		select *  from Tbl_VersionReleaseVSplitsSubLogs order by Prk_VersionReleaseVSubLogs_AutoID desc
		end
 END
 if @int_state = 3
 BEGIN
	 if @Bit_FromTop = 1
		 BEGIN
			select top (@Int_Count) *  from Tbl_VersionReleaseVLogs
		 end
	 else
		 begin
	 		select top (@Int_Count) *  from Tbl_VersionReleaseVLogs order by Prk_VersionReleaseLogs_AutoID desc
		 end
 END
  if @int_state = 4
 BEGIN
	 if @Bit_FromTop = 1
		 BEGIN
			select top (@Int_Count) *  from Tbl_VersionReleaseVSplitsSubLogs
		 end
	 else
		 begin
	 		select top (@Int_Count) *  from Tbl_VersionReleaseVSplitsSubLogs order by Prk_VersionReleaseVSubLogs_AutoID desc
		 end
 END

  if @int_state = 5
 BEGIN
			select top 1 *  from Tbl_VersionReleaseVLogs  where Str_Description Like '%Error%' or Str_ErrorLog like '%Error%' order by Prk_VersionReleaseLogs_AutoID desc
 END
  if @int_state = 6
 BEGIN
			select *  from Tbl_VersionReleaseVSplitsSubLogs where Str_Description Like '%Error%' or Str_ErrorLog like '%Error%' order by Prk_VersionReleaseVSubLogs_AutoID desc
 END
   if @int_state = 7
 BEGIN
			select *  from Tbl_VersionReleaseVLogs  where Str_Description Like '%Success%' or Str_ErrorLog like '%Success%' order by Prk_VersionReleaseLogs_AutoID desc
 END
  if @int_state = 8
 BEGIN 
			select *  from Tbl_VersionReleaseVSplitsSubLogs where Str_Description Like '%Success%' or Str_ErrorLog like '%Success%' order by Prk_VersionReleaseVSubLogs_AutoID desc
 END
   if @int_state = 9
 BEGIN
			select *  from Tbl_VersionReleaseVSplitsSubLogs where Str_Date = @MyDate
 END
   if @int_state = 10
 BEGIN
			select *  from Tbl_VersionReleaseVSplitsSubLogs  where Bit_Exe = 1
 END
GO


ALTER TABLE dbo.[Tbl_VersionFiles]
ALTER COLUMN Str_Type nvarchar(50)
Go





